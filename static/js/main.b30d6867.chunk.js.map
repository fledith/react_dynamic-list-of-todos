{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","selectedTodo","onSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filter","inputValue","onFilter","onInputValue","onAppliedInputValue","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","onDeletedSelectedTodo","useState","selectedUser","setSelectedUser","useEffect","userId","user","href","email","name","App","setTodos","setSelectedTodo","setFilter","setInputValue","appliedInputValue","setAppliedInputValue","todosFromServer","applyInputValue","useCallback","func","timerId","clearInterval","args","window","debounce","filterTodos","todoList","queryInput","length","includedTitle","toLowerCase","includes","filteredTodos","useMemo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b30d6867.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectedTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = (\n  { todos, selectedTodo, onSelectedTodo },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={selectedTodo?.id === todo.id\n            ? 'has-background-info-light'\n            : ''}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                {selectedTodo?.id === todo.id\n                  ? (<i className=\"far fa-eye-slash\" />)\n                  : (<i className=\"far fa-eye\" />)}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","interface Props {\n  filter: string;\n  inputValue: string;\n  onFilter: (filter: string) => void;\n  onInputValue: (inputValue: string) => void;\n  onAppliedInputValue: (appliedInputValue: string) => void;\n}\n\nexport const TodoFilter = ({\n  filter,\n  inputValue,\n  onFilter,\n  onInputValue,\n  onAppliedInputValue,\n}: Props) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => onFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={({ target }) => {\n            onInputValue(target.value);\n            onAppliedInputValue(target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onInputValue('');\n                onAppliedInputValue('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo;\n  onDeletedSelectedTodo: (todo: null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onDeletedSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(user => setSelectedUser(user));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onDeletedSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nconst debounce = (func: (arg: string) => void, delay: number) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearInterval(timerId);\n\n    timerId = window.setTimeout(func, delay, ...args);\n  };\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n  const [appliedInputValue, setAppliedInputValue] = useState('');\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  const applyInputValue = useCallback(\n    debounce(setAppliedInputValue, 400), [appliedInputValue],\n  );\n\n  const filterTodos = useCallback((todoList: Todo[], queryInput: string) => {\n    if (!todoList.length) {\n      return null;\n    }\n\n    return todoList.filter(todo => {\n      const includedTitle = todo.title.toLowerCase()\n        .includes(queryInput.toLowerCase());\n\n      switch (filter) {\n        case 'all':\n          return includedTitle;\n        case 'active':\n          return !todo.completed && includedTitle;\n        case 'completed':\n          return todo.completed && includedTitle;\n        default:\n          return todo;\n      }\n    });\n  }, [appliedInputValue, filter]);\n\n  const filteredTodos = useMemo(() => (\n    filterTodos(todos, appliedInputValue)\n  ), [todos, appliedInputValue, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                inputValue={inputValue}\n                onFilter={setFilter}\n                onInputValue={setInputValue}\n                onAppliedInputValue={applyInputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && (<Loader />)}\n              {filteredTodos && (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  onSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onDeletedSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}